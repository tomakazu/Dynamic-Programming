#include<bits/stdc++.h>
using namespace std;
int solution[20][20];
bool isPossible(int maze[][20],int n,int x,int y)
{
	if(x==-1||x==n||y==-1||y>=n)
		return false;
	else if(maze[x][y]==1)
		return true;
	else if(maze[x][y] == 0)
		return false;
}
void Traverse(int maze[][20],int n,int solution[][20],int x,int y){
	solution[x][y] = 1;
	if(solution[n-1][n-1]==1)
	{
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
				cout<<solution[i][j]<<" ";
		}
		cout<<endl;
		solution[x][y] = 0;
		return;
	}
	if(isPossible(maze,n,x-1,y)&&solution[x-1][y]==0)
		{
			Traverse(maze,n,solution,x-1,y);
		}
	if(isPossible(maze,n,x+1,y)&&solution[x+1][y]==0)
	{
		Traverse(maze,n,solution,x+1,y);
	}
	if(isPossible(maze,n,x,y-1)&&solution[x][y-1]==0)
	{
		Traverse(maze,n,solution,x,y-1);
	}
	if(isPossible(maze,n,x,y+1)&&solution[x][y+1]==0){
		Traverse(maze,n,solution,x,y+1);
	}
	solution[x][y]=0;
	return;
}
void ratInAMaze(int maze[][20], int n){

  /* Don't write main().
   *  Don't read input, it is passed as function argument.
   *  Print output as specified in the question
  */
  memset(solution,0,n*n*sizeof(int));
  Traverse(maze,n,solution,0,0);

}
/*int main()
{
	int n;
	cin>>n;
	int maze[20][20];
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
			cin>>maze[i][j];
	}
	ratInAMaze(maze,n);	
	return 0;
}*/
